% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_clusters_graph.r
\name{plot_clusters_graph}
\alias{plot_clusters_graph}
\title{Creates a graph plot using the similarity values calculated with ClusterFoldSimilarity().}
\usage{
plot_clusters_graph(similarity.table = NULL)
}
\arguments{
\item{similarity.table}{Dataframe. A table obtained from ClusterFoldSimilarity that contains the similarity values as a column "similarity_value" that represents 
the similarity of a source cluster to a target cluster.}
}
\value{
This function plots a graph in which the nodes are clusters from a specific dataset, the edges represent the similarity and the direction
of that similarity between clusters.
}
\description{
`plot_clusters_graph()` Creates a graph plot using the similarity values calculated with ClusterFoldSimilarity().
}
\details{
This function will calculate a similarity coeficient using the fold changes of shared genes among clusters of different samples/batches. The similarity coeficient
is calculated using the dotproduct of every pairwise combination of Fold Changes between a source cluster i of sample n and all the target clusters in sample j.
}
\examples{
library(Seurat)
library(scRNAseq)
library(ClusterFoldSimilarity)
# Mouse brain single-cell RNA-seq 1 from Romanov et. al.
mouse.brain.romanov <- scRNAseq::RomanovBrainData(ensembl = TRUE)
colnames(mouse.brain.romanov) <- colData(mouse.brain.romanov)$cellID
rownames(colData(mouse.brain.romanov)) <- colData(mouse.brain.romanov)$cellID
singlecell.1.seurat <- CreateSeuratObject(counts = counts(mouse.brain.romanov),meta.data = as.data.frame(colData(mouse.brain.romanov)))

# Mouse brain single-cell RNA-seq 2 from Zeisel et. al.
mouse.brain.zei <- scRNAseq::ZeiselBrainData(ensembl = TRUE)
singlecell.2.seurat <- CreateSeuratObject(counts = counts(mouse.brain.zei),meta.data = as.data.frame(colData(mouse.brain.zei)))

# Create a list with the unprocessed single-cell datasets
singlecell.object.list <- list(singlecell.1.seurat,singlecell.2.seurat)
# Apply the same processing to each dataset and return a list of single-cell analysis
singlecell.object.list <- lapply(X = singlecell.object.list, FUN = function(x){
  x <- NormalizeData(x)
  x <- FindVariableFeatures(x, selection.method = "vst", nfeatures = 1000)
  x <- ScaleData(x,features = VariableFeatures(x))
  x <- RunPCA(x, features = VariableFeatures(object = x))
  x <- FindNeighbors(x, dims = seq(10))
  x <- FindClusters(x, resolution = 0.1)
})
# singlecell.object.list consist of 2 or more single-cell objects
# By default plots a graph using the similarity values: 
similarity.table.top <- cluster_fold_similarity(sce_list = singlecell.object.list,top_n = 1)
# The same plot can be created using:
plot_clusters_graph(similarity.table = similarity.table.top)

}
\author{
Oscar Gonzalez-Velasco
}
